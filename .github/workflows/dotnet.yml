name: dotNet

on:
  push:
    branches:
      - master
      - develop 
      - feature/ci
  pull_request:
    branches:
      - master
      - develop 
      - feature/ci

jobs:
  
  build-and-test-debug:
    name: Build and test in Debug configuration
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        version: [6.x, 7.x]
    defaults:
      run:
        working-directory: ./src
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup dotNET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.version }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Debug
    - name: Test
      run: dotnet test --no-build --verbosity normal

  build-and-test-release:
    name: Build and test in Release configuration
    needs: build-and-test-debug
    defaults:
      run:
        working-directory: ./src
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup dotNET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: release-buid
        path: |
          ./jjm.one.Serilog.Extensions.Logging.Helpers/bin
          ./jjm.one.Serilog.Extensions.Logging.Helpers/obj
        retention-days: 1
  
  sonarcloud:
    name: Build and analyze with SonarCloud
    needs: build-and-test-release
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Setup dotNET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          cd .\src
          .\..\.sonar\scanner\dotnet-sonarscanner begin /k:"jjm-one_jjm.one.Serilog.Extensions.Logging.Helpers" /o:"jjm-one" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet restore
          dotnet build --no-restore
          .\..\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  publish-nuget:
    name: Publish the NuGet package
    needs: [build-and-test-debug, build-and-test-release, sonarcloud, publish-doc]
    if: github.ref_type == 'tag' && startsWith(github.event.ref, 'refs/tags/version-')
    runs-on: ubuntu-latest
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: release-buid
      - name: Setup dotNET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - name: Publish the package to nuget.org
        run: |
          ls -la
      #run: dotnet nuget push */bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
      #env:
      #  NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}

  publish-doc:
    name: Publish Documentation
    needs: [build-and-test-debug]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy documentation
        run: echo "Deploy documentation"
  
  

  
